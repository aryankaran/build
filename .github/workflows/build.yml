name: Compile

# Controls when the action will run. 
on:
 # Triggers the workflow on push events but only for the batch branch
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: CleanUp Runner
        uses: rokibhasansagar/slimhub_actions@main

      # Setup the environment
      - name: Environment Setup
        run: |
          sudo bash -c "$(wget -O- https://github.com/aryankaran/build-env-setup/raw/main/envsetup.sh)"

      # Actual Build
      - name: Sync and Build
       # env:
        #  BOT_TOKEN : ${{secrets.BOT_TOKEN}}
        #  CHAT_ID : ${{secrets.CHAT_ID}}
        run: |
          pwd
          mkdir los;cd los
          # sync rom
          repo init --depth=1 --no-repo-verify -u https://github.com/LineageOS/android.git -b cm-14.1 -g default,-mips,-darwin,-notdefault
          git clone https://github.com/aryankaran/local_manifests.git --depth 1 -b cm-14.1 .repo/local_manifests
          df -h .
          repo sync -c --no-clone-bundle --no-tags --optimized-fetch --prune --force-sync -j8
          rm -rf .repo
          df -h .
          # Build Rom
          source build/envsetup.sh
          export TZ=Asia/Kolkata
          # export KBUILD_BUILD_USER=aryan
          # export KBUILD_BUILD_HOST=aryankaran
          cd device/intex/Cloud_Q11/patches
          bash apply-patches.sh
          cd ../../../..
          export USE_CCACHE=1
          export CCACHE_DIR=~/ccache
          ccache -s
          export CCACHE_EXEC=$(which ccache)
          ccache -M 8G
          #
          export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m"
          #
          export LC_ALL=C
          #
          brunch Cloud_Q11
          curl --upload-file out/target/product/Cloud_Q11/*.zip trasnfer.sh/$(ls out/target/product/Cloud_Q11/*.zip | cut -d / -f5)
